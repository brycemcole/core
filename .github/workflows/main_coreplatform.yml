name: Build and deploy Node.js app to Azure Web App - coreplatform

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Install PM2 globally
        run: npm install -g pm2

      - name: Run linter
        run: npm run lint

      - name: Zip artifact for deployment
        run: zip -r release.zip . -x "node_modules/**" ".git/**" ".github/**" "tests/**"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_97B5C32E11844D9C9E68A0FA7BBC4D40 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_074F77A61489473088C7AEA0D2F4119A }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_AAE5BA95235A4449B0C864089846E65F }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'coreplatform'
          slot-name: 'Production'
          package: .
          startup-command: 'pm2 start server.js --no-daemon'

      - name: 'Post-deployment cleanup'
        run: rm release.zip