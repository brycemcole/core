name: Build, Test, and Deploy Node.js app to Azure Web App - coreplatform

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"

      - name: npm install and build
        run: |
          npm ci
          npm run build --if-present

      - name: Run ESLint
        run: npx eslint .

      - name: Check code formatting
        run: npx prettier --check .

      - name: Check for outdated dependencies
        run: npm outdated

      - name: Run npm audit
        run: npm audit --audit-level=moderate

      - name: Check for sensitive data exposure
        run: |
          if grep -R -i "password\|secret\|key\|token" --exclude-dir={node_modules,.git} .; then
            echo "Potential sensitive data found in code"
            exit 1
          fi

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: "Deploy to Azure Web App"
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: "coreplatform"
          slot-name: "Production"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_65666B72FDCA4DBF84A90C4E2F6F7D4F }}
          package: .

      - name: "Post Deployment Check"
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://coreplatform.azurewebsites.net)
          if [ $response = "200" ]; then
            echo "Deployment successful, site is up"
          else
            echo "Site is not responding with 200 OK, got $response"
            exit 1
          fi
