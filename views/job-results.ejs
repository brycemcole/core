<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover" />
  <title>CORE - Jobs in <%= state %></title>
  <link rel="stylesheet" href="/css/navbar.css" />
  <link rel="stylesheet" href="/css/search.css" />
  <link rel="stylesheet" href="/css/company_profile.css" />
  <link rel="stylesheet" href="/css/job-results.css" />
  <link rel="shortcut icon" href="/img/core.png" />

  <!-- Meta Tags for SEO and Social Media -->
  <meta name="description" content="Find job opportunities in <%= state %> on CORE. Explore various job listings available in <%= state %>.">
  <meta name="keywords" content="jobs in <%= state %>, <%= state %> job listings, job search <%= state %>, CORE jobs">
  <meta name="robots" content="index, follow">

  <!-- Open Graph Meta Tags -->
  <meta property="og:title" content="CORE - Jobs in <%= state %>">
  <meta property="og:description" content="Find job opportunities in <%= state %> on CORE. Explore various job listings available in <%= state %>.">
  <meta property="og:image" content="/img/core.png"> <!-- Replace with a suitable image if needed -->
  <meta property="og:url" content="https://getcore.dev/jobs/<%= state %>">
  <meta property="og:type" content="website">

  <!-- Twitter Meta Tags -->
  <meta name="twitter:card" content="summary_large_image">
  <meta name="twitter:title" content="CORE - Jobs in <%= state %>">
  <meta name="twitter:description" content="Find job opportunities in <%= state %> on CORE. Explore various job listings available in <%= state %>.">
  <meta name="twitter:image" content="/img/core.png"> <!-- Replace with a suitable image if needed -->
</head>

<style>
</style>

<body>
  <%- include('partials/navbar', { pagePath: 'updates' }) %>
  <main>
    <div class="tag-search-header">
      <h4> <%= jobCount %> job results in <span class="tag"><%= state %></span></h4>
    </div>
    <%
    function getTintFromName(name) {
        let hash = 0;
        for (let i = 0; i < name.length; i++) {
          hash = name.charCodeAt(i) + ((hash << 5) - hash);
        }
        hash = hash & 0x00ffffff; // Ensure hash is within the range of 0x00ffffff

        // Convert hash to a hexadecimal string and pad with leading zeros
        const colorHex = ("00000" + hash.toString(16)).slice(-6);
        const tintColor = `#${colorHex}65`;

        // Blend with a desaturated base color (e.g., gray)
        const baseColor = "#808080"; // Light gray
        const blendedColor = blendColors(tintColor, baseColor, 0.5);
        return blendedColor;
    }

function getTintFromNameSecondary(name) {
  let hash = 0;
  for (let i = 0; i < name.length; i++) {
    hash = name.charCodeAt(i) + ((hash << 5) - hash);
  }
  hash = hash & 0x00ffffff; // Ensure hash is within the range of 0x00ffffff

  // Convert hash to a hexadecimal string and pad with leading zeros
  const colorHex = ("00000" + hash.toString(16)).slice(-6);
  const tintColor = `#${colorHex}`;

  // Blend with a desaturated base color (e.g., gray)
  const baseColor = "#404040"; // Dark gray
  const blendedColor = blendColors(tintColor, baseColor, 0.5);
  return blendedColor;
}

function blendColors(color1, color2, ratio) {
  const r1 = parseInt(color1.slice(1, 3), 16);
  const g1 = parseInt(color1.slice(3, 5), 16);
  const b1 = parseInt(color1.slice(5, 7), 16);

  const r2 = parseInt(color2.slice(1, 3), 16);
  const g2 = parseInt(color2.slice(3, 5), 16);
  const b2 = parseInt(color2.slice(5, 7), 16);

  const r = Math.round(r1 * ratio + r2 * (1 - ratio));
  const g = Math.round(g1 * ratio + g2 * (1 - ratio));
  const b = Math.round(b1 * ratio + b2 * (1 - ratio));

  const blendedColor = `#${r.toString(16).padStart(2, "0")}${g
    .toString(16)
    .padStart(2, "0")}${b.toString(16).padStart(2, "0")}`;
  return blendedColor;
}%>
    <% if (jobs.length > 0) { %>
    <div class="jobs">
      <% jobs.forEach((job) => { %>
      <div class="job" onclick="window.location.href='/jobs/<%= job.id %>'">
        <div class="job-preview">
          <div class="job-info">
            <div class="company-info">
              <img class="thumbnail thumbnail-tiny" src="<%= job.company_logo %>" alt="<%= job.company_name %> logo" />
              <p class="company-name"><%= job.company_name %></p>
            </div>
            <h3 class="job-title">
              <a href="/jobs/<%= job.id %>">
                <%= job.title %>
              </a>
              <span style="margin-left: auto; float: right;"><%= job.experienceLevel[0].toUpperCase() + job.experienceLevel.slice(1) %></span>
            </h3>
            <h5 class="job-subtitle secondary-text">
              <span style="margin-left: auto; float:right;">USD $<%= Math.floor((job.salary + job.salary_max) / 2 / 1000) %>k</span>
              <%= job.location %>
            </h5>
            <div class="job-main">
              <div class="job-description">
                <p class="job-description"><%= job.description %></p>
              </div>
            </div>
          </div>
        </div>
      </div>
      <% }); %>
    </div>
    <% } else { %>
    <div class="jobs-header">

    </div>
    <% } %>

  </main>

</body>

</html>