<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover" />
  <title>\core\ <%= job.title %> at <%= job.company_name %></title>
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
  <link rel="stylesheet" href="/css/jobs.css" />
  <link rel="stylesheet" href="/css/navbar.css" />
  <link rel="stylesheet" href="/css/styles.css" />
  <link rel="stylesheet" href="/css/com-btn-container.css" />
  <link rel="stylesheet" href="/css/job-posting.css" />
  <link rel="shortcut icon" href="/img/core.png" />

  <meta name="description" content="<%= job.title %> position at <%= job.company_name %>. <%= job.short_description %>. Apply now and join our team at CORE.">
  <meta name="keywords" content="<%= job.title %>, <%= job.company_name %>, job opening, career opportunity, <%= job.tags %>">
  <meta name="robots" content="index, follow">
  <link rel="canonical" href="https://getcore.dev/jobs/<%= job_id %>" />

  <!-- Open Graph / Facebook -->
  <meta property="og:type" content="website">
  <meta property="og:url" content="https://getcore.dev/jobs/<%= job_id %>">
  <meta property="og:title" content="<%= job.title %> at <%= job.company_name %> | CORE Job Listings">
  <meta property="og:description" content="<%= job.title %> position at <%= job.company_name %>. <%= job.short_description %>. Apply now and join our team at CORE.">
  <meta property="og:image" content="<%= job.company_logo %>">

  <!-- Twitter -->
  <meta name="twitter:card" content="summary_large_image">
  <meta name="twitter:url" content="https://getcore.dev/jobs/<%= job_id %>">
  <meta name="twitter:title" content="\core\ <%= job.title %> at <%= job.company_name %>">
  <meta name="twitter:description" content="<%= job.title %> position at <%= job.company_name %> Apply now and join our team at CORE.">
  <meta name="twitter:image" content="<%= job.company_logo %>">

  <!-- JSON-LD for Job Posting -->
  <script type="application/ld+json">
    {
      "@context": "https://schema.org/",
      "@type": "JobPosting",
      "title": "<%= job.title %>",
      "description": "<%= job.description %>",
      "datePosted": "<%= job.postedDate %>",
      "experienceLevel": "<%= job.experienceLevel %>",
      "hiringOrganization": {
        "@type": "Organization",
        "name": "<%= job.company_name %>",
        "sameAs": "https://getcore.dev",
        "logo": "<%= job.company_logo %>"
      },
      "jobLocation": {
        "@type": "Place",
        "address": {
          "@type": "PostalAddress",
          "addressLocality": "<%= job.location %>",
        }
      },
      "baseSalary": {
        "@type": "MonetaryAmount",
        "currency": "USD",
        "value": {
          "@type": "QuantitativeValue",
          "minValue": <%= job.salary %>,
          "maxValue": <%= job.salary_max %>,
          "unitText": "YEAR"
        }
      }
    }
  </script>
</head>

<body>
  <%- include('partials/navbar', { pagePath: "openings/" + job_id }) %>

  <main>
    <%- include('partials/com-btn-container', { }) %>
    <div class="container">
      <div class="job-details-container">
        <% 
    // Define helper functions
    function formatDateJob(dateString) {
      const date = new Date(dateString);
      return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' });
    }

    function formatSalary(salary) {
      return salary.toLocaleString('en-US', { minimumFractionDigits: 0 });
    }

    function isOlderThan30Days(job) {
      const postedDate = new Date(job.postedDate);
      const currentDate = new Date();
      const daysDifference =
        (currentDate - postedDate) / (1000 * 60 * 60 * 24);
      return daysDifference > 30;
    }

    function extractSalaryFromDescription(description) {
  const salaryPatterns = [
    /\$([0-9,]+(?:\.[0-9]{2})?)\s?[-—]\s?\$([0-9,]+(?:\.[0-9]{2})?)/gi,  // Match salary ranges like "$144,000 - $203,500" or "$120,000.00 - $178,000.00"
    /CAD?\s?\$([0-9,]+(?:\.[0-9]{2})?)\s?[-—]\s?CAD?\s?\$([0-9,]+(?:\.[0-9]{2})?)/gi,  // Match salary ranges like "CAD $108,100 - $199,700"
    /USD\s?\$([0-9,]+(?:\.[0-9]{2})?)\s?[-—]\s?\$([0-9,]+(?:\.[0-9]{2})?)\s?(per year|per month|per hour)?/gi,  // Match salary ranges like "USD $106,100 - $185,400 per year"
    /\$([0-9,]+(?:\.[0-9]{2})?)\s?(USD)?\s?(\/mo|\/hr|\s*hour|\s*month)?/gi, // Match individual salaries like "$45 /hr", "$45.00", etc.
    /CA\$([0-9,]+(?:[KMB])?)\s?[-—]\s?CA\$([0-9,]+(?:[KMB])?)/gi  // Match salary ranges like "CA$125K - CA$160K"
  ];

  const matches = [];

  salaryPatterns.forEach((pattern) => {
    let match;
    while ((match = pattern.exec(description)) !== null) {
      matches.push({
        value: match[0],
        min: match[1] ? parseFloat(match[1].replace(/,/g, "")) * (match[1].includes('K') ? 1000 : match[1].includes('M') ? 1000000 : 1) : null,
        max: match[2] ? parseFloat(match[2].replace(/,/g, "")) * (match[2].includes('K') ? 1000 : match[2].includes('M') ? 1000000 : 1) : null,
        period: match[3] ? match[3].trim() : null,
      });
    }
  });

  return matches;
}

    // Extract skills and benefits
    let benefitsArray = [];
    let skillsArray = [];
    try {
      const keywords = ['JavaScript', 'Python', 'Java', 'C++', 'React', 'Node.js', 'SQL', 'AWS', 'Docker', 'Kubernetes', 'CRM', 'Salesforce', 'Node.js', 'cybersecurity', 'Power BI', 'Excel', 'Data Visualization', 'Statistics', 'Finance'];
      skillsArray = keywords.filter(keyword => 
        job.description.toLowerCase().includes(keyword.toLowerCase())
      );
      if (skillsArray.length === 0 && job.skills) {
        skillsArray = job.skills.split(', ');
      }
    } catch (error) {
      console.error('Error extracting skills:', error);
      skillsArray = [];
    }

    try {
      benefitsArray = job.benefits ? job.benefits.split(',') : [];
    } catch (error) {
      console.error('Error splitting benefits:', error);
      benefitsArray = [];
    }

    const formattedBenefits = benefitsArray
      .map((benefit) => `<li>${benefit.replace(/'/g, '')}</li>`)
      .join('');

    const maxSkills = 10;
    const displayedSkills = skillsArray.slice(0, maxSkills);

    const skillsHTML = displayedSkills
      .map(
        (skill) =>
          `<a class="mini-text bold" href="/jobs?skill=${encodeURIComponent(skill.trim())}">${skill}</a>`
      )
      .join(', ');

    const remainingSkills = skillsArray.length - maxSkills;
    %>

        <div class="job-listing">
          <div class="job-listing-menu">
            <nav class="breadcrumbs">
              <ol class="flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5">
                <a href="/jobs" class="transition-colors hover:text-foreground">Jobs</a>
                <svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M6.1584 3.13508C6.35985 2.94621 6.67627 2.95642 6.86514 3.15788L10.6151 7.15788C10.7954 7.3502 10.7954 7.64949 10.6151 7.84182L6.86514 11.8418C6.67627 12.0433 6.35985 12.0535 6.1584 11.8646C5.95694 11.6757 5.94673 11.3593 6.1356 11.1579L9.565 7.49985L6.1356 3.84182C5.94673 3.64036 5.95694 3.32394 6.1584 3.13508Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"></path>
                </svg>
                <img src="<%= job.company_logo %>" style="width: auto;" alt="<%= job.company_name %> logo" onerror="this.onerror=null;this.src='/img/glyph.png';" class="thumbnail-micro thumbnail-regular" />
                <a class="transition-colors hover:text-foreground" href="/jobs/company/<%= encodeURIComponent(job.company_name) %>"><%= job.company_name %></a>
                <svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M6.1584 3.13508C6.35985 2.94621 6.67627 2.95642 6.86514 3.15788L10.6151 7.15788C10.7954 7.3502 10.7954 7.64949 10.6151 7.84182L6.86514 11.8418C6.67627 12.0433 6.35985 12.0535 6.1584 11.8646C5.95694 11.6757 5.94673 11.3593 6.1356 11.1579L9.565 7.49985L6.1356 3.84182C5.94673 3.64036 5.95694 3.32394 6.1584 3.13508Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"></path>
                </svg>
              </ol>
            </nav>
            <div class="company-info w-100">
              <div class="company-details w-full">
                <div class="flex flex-col gap-2">
                  <h3 class="font-semibold tracking-tight text-2xl">
                    <%= job.title %>
                  </h3>
                  <p class="text-sm text-muted-foreground">
                    <% if (job.experienceLevel) { %>
                    <a href="/jobs?experienceLevel=<%= encodeURIComponent(job.experienceLevel) %>" class="text-sm bold text-muted-foreground">
                      <%= job.experienceLevel %>
                    </a>
                    <span class="text-sm">•</span>
                    <% } %>
                    <%= job.location %>
                    <span class="text-sm">•</span>
                    <span class="text-sm">
                      <%= job.applicants ? job.applicants : 0 %> applicants
                    </span>
                    <span class="text-sm">•</span>
                    <time class="text-sm primary-text"><%= formatDateJob(job.postedDate) %></time>
                  </p>
                  <% if (job.skills_string) { %>
                  <p class="text-sm text-balance max-w-lg leading-relaxed">
                    Skills:
                    <span class="inline" data-show="false">
                      <% 
        const skills = job.skills_string.split(',').map(skill => skill.trim());
        skills.forEach((skill, index) => {
      %>
                      <span class="<%= index > 1 ? 'hidden' : '' %>">
                        <a href="/jobs?skill=<%= encodeURIComponent(skill) %>" class="font-medium underline underline-offset-4"><%= skill %></a><%= index < skills.length - 1 ? ', ' : '' %>
                      </span>
                      <% }) %>
                    </span>
                    <% if (skills.length > 2) { %>
                    <button class="show-more-btn text-blue-500 underline text-sm cursor-pointer">Show more</button>
                    <% } %>
                  </p>
                  <% } %>
                  <% if (job.accepted_college_majors) { %>
                  <p class="v-center text-sm text-balance wrap max-w-lg leading-relaxed">
                    Majors:
                    <span class="inline" data-show="false">
                      <% 
        const majors = job.accepted_college_majors.split(',').map(major => major.trim());
        majors.forEach((major, index) => {
      %>
                      <span class="<%= index > 1 ? 'hidden' : '' %>">
                        <% if (major.toLowerCase().includes('related fields') || major.toLowerCase() === 'related') { %>
                        <%= major %>
                        <% } else { %>
                        <a href="/jobs?major=<%= encodeURIComponent(major) %>" class="font-medium underline underline-offset-4"><%= major %></a>
                        <% } %>
                        <%= index < majors.length - 1 ? ', ' : '' %>
                      </span>
                      <% }) %>
                    </span>
                    <% if (majors.length > 2) { %>
                    <button class="show-more-btn text-blue-500 underline text-sm cursor-pointer">Show more</button>
                    <% } %>
                  </p>
                  <% } %>

                  <script>
                    document.addEventListener('DOMContentLoaded', function () {
                      document.querySelectorAll('.show-more-btn').forEach(function (button) {
                        button.addEventListener('click', function () {
                          const content = this.previousElementSibling;
                          const isShowing = content.getAttribute('data-show') === 'true';

                          if (isShowing) {
                            content.querySelectorAll('span').forEach((span, index) => {
                              if (index > 1) span.classList.add('hidden');
                            });
                            this.textContent = 'Show more';
                            content.setAttribute('data-show', 'false');
                          } else {
                            content.querySelectorAll('span').forEach(span => span.classList.remove('hidden'));
                            this.textContent = 'Show less';
                            content.setAttribute('data-show', 'true');
                          }
                        });
                      });
                    });
                  </script>
                  <div class="flex flex-row gap-4 v-center">
                    <div class="flex flex-row gap-06 v-center">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-house">
                        <path d="M15 21v-8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v8" />
                        <path d="M3 10a2 2 0 0 1 .709-1.528l7-5.999a2 2 0 0 1 2.582 0l7 5.999A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z" />
                      </svg>
                      <p class="text-sm text-balance max-w-lg leading-relaxed"><%= job.relocation ? 'Relocation offered' : 'No relocation' %></p>
                    </div>
                    <div class="flex flex-row gap-06 v-center">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-laptop">
                        <path d="M20 16V7a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v9m16 0H4m16 0 1.28 2.55a1 1 0 0 1-.9 1.45H3.62a1 1 0 0 1-.9-1.45L4 16" />
                      </svg>
                      <p class="text-sm text-balance max-w-lg leading-relaxed"><%= job.isRemote ? 'Remote work available' : 'On-site only' %></p>
                    </div>
                    <% if (user && user.isPremium) { %>
                    <div class="flex flex-row gap-06 v-center">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-eye">
                        <path d="M2.062 12.348a1 1 0 0 1 0-.696 10.75 10.75 0 0 1 19.876 0 1 1 0 0 1 0 .696 10.75 10.75 0 0 1-19.876 0" />
                        <circle cx="12" cy="12" r="3" />
                      </svg>
                      <p class="text-sm text-balance max-w-lg leading-relaxed"><%= job.views %> views</p>
                    </div>
                    <% } %>
                  </div>
                  <% if (!job.salary) { %>
                  <%
                  let salary = "";
                    const salaries = extractSalaryFromDescription(job.description + ' ' + job.MinimumQualifications + ' ' + job.PreferredQualifications + ' ' + job.raw_description_no_format);
                    if (salaries.length > 0) {
                      salary = salaries[0];
                    }
                    %>
                  <div class="job-info-flairs text-sm text-balance max-w-lg leading-relaxed">

                    <span class="salary flex flex-row gap-2">
                      <% if ((job.location.toLowerCase().includes('us') || 
        job.location.toLowerCase().includes('united states') || 
        (/\b(AL|AK|AZ|AR|CA|CO|CT|DE|FL|GA|HI|ID|IL|IN|IA|remote|KS|KY|LA|ME|MD|MA|MI|MN|MS|MO|MT|NE|NV|NH|NJ|NM|NY|NC|ND|OH|OK|OR|PA|RI|SC|SD|TN|TX|UT|VT|VA|WA|WV|WI|WY|Alabama|Alaska|Arizona|Arkansas|California|Colorado|Connecticut|Delaware|Florida|Georgia|Hawaii|Idaho|Illinois|Indiana|Iowa|Kansas|Kentucky|Louisiana|Maine|Maryland|Massachusetts|Michigan|Minnesota|Mississippi|Missouri|Montana|Nebraska|Nevada|New Hampshire|New Jersey|New Mexico|New York|North Carolina|North Dakota|Ohio|Oklahoma|Oregon|Pennsylvania|Rhode Island|South Carolina|South Dakota|Tennessee|Texas|Utah|Vermont|Virginia|Washington|West Virginia|Wisconsin|Wyoming)\b/i).test(job.location))) { %>
                      <%= salary.value ? (salary.value.startsWith('$') ? salary.value : `USD $${salary.value}`) : '' %>
                      <% } %>
                    </span>

                  </div>
                  <% } %>
                  <% if (job.salary || job.salary_max) { %>
                  <div class="job-info-flairs text-sm text-balance max-w-lg leading-relaxed">
                    <% if (job.salary !== 0) { %>
                    <span class="salary flex flex-row gap-2">
                      <svg xmlns="http://www.w3.org/2000/svg" class="mr-2" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-coins">
                        <circle cx="8" cy="8" r="6" />
                        <path d="M18.09 10.37A6 6 0 1 1 10.34 18" />
                        <path d="M7 6h1v4" />
                        <path d="m16.71 13.88.7.71-2.82 2.82" />
                      </svg>
                      USD $<%= formatSalary(job.salary) %>
                      <% if (job.salary_max !== 0) { %>
                      - $<%= formatSalary(job.salary_max) %>
                      <% } %>
                      <% if (!job.location.toLowerCase().includes('us') && 
                        !job.location.toLowerCase().includes('united states') &&
                        !(/\b(AL|AK|AZ|AR|CA|CO|CT|DE|FL|GA|HI|ID|IL|IN|IA|remote|KS|KY|LA|ME|MD|MA|MI|MN|MS|MO|MT|NE|NV|NH|NJ|NM|NY|NC|ND|OH|OK|OR|PA|RI|SC|SD|TN|TX|UT|VT|VA|WA|WV|WI|WY|Alabama|Alaska|Arizona|Arkansas|California|Colorado|Connecticut|Delaware|Florida|Georgia|Hawaii|Idaho|Illinois|Indiana|Iowa|Kansas|Kentucky|Louisiana|Maine|Maryland|Massachusetts|Michigan|Minnesota|Mississippi|Missouri|Montana|Nebraska|Nevada|New Hampshire|New Jersey|New Mexico|New York|North Carolina|North Dakota|Ohio|Oklahoma|Oregon|Pennsylvania|Rhode Island|South Carolina|South Dakota|Tennessee|Texas|Utah|Vermont|Virginia|Washington|West Virginia|Wisconsin|Wyoming)\b/i.test(job.location))
                      ) { %>
                      <span class="currency-warning"> (currency may not be in USD)</span>
                      <% } %>
                    </span>
                    <% } %>
                  </div>
                  <% } %>
                  <% if (!job.isProcessed && user && user.isPremium) { %>
                  <div class="adaptive-border rounded">
                    <div class="text-sm p-4 flex items-center">
                      <span class="material-symbols-outlined animate-spin mr-2" style="color: #6366f1;">auto_awesome</span>
                      <span class='please-wait-button'>Please wait a moment while we improve this job posting!</span>
                    </div>
                  </div>
                  <% } %>
                  <% if (user && user.isPremium) { %>
                  <div class="adaptive-border mb-4 rounded flex justify-between items-center py-2 px-4">
                    <div class="text-sm flex items-center">
                      <span class='please-wait-button'>Generate a match overview for this job posting!</span>
                    </div>
                    <button class="inline-flex items-center shadow justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-black text-background shadow-sm hover:bg-black hover:text-accent-background h-8 w-8">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-sparkles">
                        <path d="M9.937 15.5A2 2 0 0 0 8.5 14.063l-6.135-1.582a.5.5 0 0 1 0-.962L8.5 9.936A2 2 0 0 0 9.937 8.5l1.582-6.135a.5.5 0 0 1 .963 0L14.063 8.5A2 2 0 0 0 15.5 9.937l6.135 1.581a.5.5 0 0 1 0 .964L15.5 14.063a2 2 0 0 0-1.437 1.437l-1.582 6.135a.5.5 0 0 1-.963 0z" />
                        <path d="M20 3v4" />
                        <path d="M22 5h-4" />
                        <path d="M4 17v2" />
                        <path d="M5 18H3" />
                      </svg>
                    </button>
                  </div>
                  <% } %>
                  <!--
              <% if (!job.isProcessed && user && !user.isPremium) { %>
                <div class="adaptive-border rounded">
                  <div class="text-sm p-4 flex items-center">
                    <span class="material-symbols-outlined mr-2" style="color: #6366f1;">star</span>
                    <span>Sign up for premium to generate better overviews of these job postings</span>
                  </div>
                </div>
              <% } %>
              -->
                </div>
              </div>
            </div>
            <div class="flex flex-col gap-06">
              <div class="interact-buttons flex flex-row gap-4 v-center">
                <% if (job) { %>
                <div class="apply-button-container flex gap-4">
                  <button class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground shadow hover:bg-primary/90 h-8 px-4 py-2" onclick="applyForJob(event, '<%= job.id %>', '<%= job.link %>')">
                    <svg xmlns="http://www.w3.org/2000/svg" class="mr-2" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-briefcase">
                      <path d="M16 20V4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16" />
                      <rect width="20" height="14" x="2" y="6" rx="2" />
                    </svg>
                    <span class="text-sm">Apply</span>
                  </button>
                  <button class="inline-flex items-center justify-center whitespace-nowrap font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground rounded-md px-3 text-xs h-8 gap-1" id="favorite-button" onclick="favorite('job', <%= job.id %>);">
                    <span class="text-sm">Save</span>
                  </button>
                  <button class="inline-flex items-center justify-center whitespace-nowrap font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground rounded-md px-3 text-xs h-8 gap-1" id="favorite-button" onclick="showReportModal('job', <%= job.id %>);">
                    <span class="text-sm">Report</span>
                  </button>
                </div>
                <% } %>
                <div class="second-buttons-container">
                  <div class="dropdown relative" tabindex="0">
                    <button aria-label="Dropdown" class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-8 w-8" style="padding-top: .4rem; padding-bottom: .4rem;" aria-haspopup="true" aria-expanded="false">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-ellipsis">
                        <circle cx="12" cy="12" r="1" />
                        <circle cx="19" cy="12" r="1" />
                        <circle cx="5" cy="12" r="1" />
                      </svg>
                    </button>
                    <div class="dropdown-content z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 w-56">
                      <a class="grow-button margin-h-auto">
                        <button class="no-margin no-padding no-bg no-border" onclick="share('<%= job.title %>', '', 'https://getcore.dev/jobs/<%= job.id %>', 'job', '<%= job.id %>');">
                          <span class="material-symbols-outlined">share</span>
                          <span class="text-sm">Share</span>
                        </button>
                      </a>
                      <% if (user && user.isPremium) { %>
                      <div class="resume-button w-100">
                        <a href="/api/create-resume/<%= job.id %>" class="grow-button margin-h-auto">
                          <span class="material-symbols-outlined">description</span>
                          <span class="text-sm">Resume</span>
                        </a>
                      </div>
                      <div class="cover-letter-button w-100">
                        <a href="/api/create-cover-letter/<%= job.id %>" class="grow-button margin-h-auto">
                          <span class="material-symbols-outlined">description</span>
                          <span class="text-sm">Cover Letter</span>
                        </a>
                      </div>
                      <div class="delete-button-container">
                        <a class="grow-button margin-h-auto cancel-button-text" href="/jobs/delete/<%= job.id %>">
                          <span class="material-symbols-outlined">delete</span>
                          <span class="text-sm">Delete</span>
                        </a>
                      </div>
                      <% } %>
                    </div>
                  </div>
                </div>
              </div>
              <% if (isOlderThan30Days(job)) { %>
              <div class="caution-messages">This job was posted more than 30 days ago.</div>
              <% } %>
              <% if (!user) { %>
              <div id="alert-box" role="alert" class="relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground bg-background text-foreground">
                <!-- Info Icon -->
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-info h-4 w-4">
                  <circle cx="12" cy="12" r="10" />
                  <line x1="12" y1="16" x2="12" y2="12" />
                  <line x1="12" y1="8" x2="12.01" y2="8" />
                </svg>

                <!-- Close Button -->
                <button onclick="document.getElementById('alert-box').remove()" class="absolute top-2 right-2 p-1 hover:bg-gray-100 rounded-full">
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-x">
                    <path d="M18 6 6 18"></path>
                    <path d="m6 6 12 12"></path>
                  </svg>
                </button>

                <h5 class="mb-1 font-medium leading-none tracking-tight">Company Insights</h5>
                <div class="text-sm">
                  <p class="text-foreground">
                    Sign up or login to view job matches personalized to your resume! Please
                    <a href="/login" class="underline">sign up to get started</a>
                    and build your resume, cover letter, and profile.
                  </p>
                </div>
              </div>
              <% } %>
            </div>
          </div>
        </div>
        <div class="job-details primary-text company-profile-section">
          <% if (job.company_description && job.company_description.length > 10) { %>
          <div class="company-description text-sm">
            <h4 class="font-semibold leading-none tracking-tight">Company Description</h4>
            <p class="text-sm text-balance max-w-lg leading-relaxed"><%= job.company_description %></p>
          </div>
          <% } %>
          <% if (!job.isProcessed) { %>
          <div class="job-posting-description text-sm">
            <h4 class="font-semibold leading-none tracking-tight">Job Description</h4>
            <span class="text-sm text-balance max-w-lg leading-relaxed"><%- job.description %></span>
          </div>
          <% } %>
          <% if (job.isProcessed) { %>
          <div class="job-posting-description <% if (job.recruiter_username === 'autojob') { %>ai-generated-content<% } %>">
            <h4 class="font-semibold leading-none tracking-tight" style="margin-top:0;"><span class="material-symbols-outlined" style="color: #6366f1;">auto_awesome</span> AI-Generated Overview</h4>
            <span class="text-sm text-balance max-w-lg leading-relaxed">
              <%- job.description.replace('??', '') %>
            </span>
          </div>
          <% } %>
          <% if (job.Requirements) { %>
          <div class="font-semibold leading-none tracking-tight">
            <h4 class="font-semibold leading-none tracking-tight">Requirements</h4>
            <p class="text-sm text-balance max-w-lg leading-relaxed"><%= job.Requirements %></p>
          </div>
          <% } %>
          <% if (job.Responsibilities) { %>
          <div class="job-responsibilities">
            <h4 class="font-semibold leading-none tracking-tight">Responsibilities</h4>
            <p class="text-sm text-balance max-w-lg leading-relaxed"><%= job.Responsibilities %></p>
          </div>
          <% } %>
          <% if (job.MinimumQualifications) { %>
          <div class="minimum-qualifications">
            <h4 class="font-semibold leading-none tracking-tight">Minimum Qualifications</h4>
            <p class="text-sm text-balance max-w-lg leading-relaxed"><%= job.MinimumQualifications %></p>
          </div>
          <% } %>
          <% if (job.PreferredQualifications) { %>
          <div class="preferred-qualifications">
            <h4 class="font-semibold leading-none tracking-tight">Preferred Qualifications</h4>
            <p class="text-sm text-balance max-w-lg leading-relaxed"><%= job.PreferredQualifications %></p>
          </div>
          <% } %>
          <% if (formattedBenefits) { %>
          <div class="job-benefits">
            <h4 class="font-semibold leading-none tracking-tight">Job Benefits</h4>
            <ul class="text-sm text-balance max-w-lg leading-relaxed">
              <%- formattedBenefits %>
            </ul>
          </div>
          <% } %>
          <% if (job.NiceToHave) { %>
          <div class="job-nice-to-have">
            <h4 class="font-semibold leading-none tracking-tight">Nice to Have</h4>
            <p class="text-sm text-balance max-w-lg leading-relaxed"><%= job.NiceToHave %></p>
          </div>
          <% } %>
          <% if (job.schedule) { %>
          <div class="job-schedule">
            <h4 class="font-semibold leading-none tracking-tight">Schedule</h4>
            <p class="text-sm text-balance max-w-lg leading-relaxed"><%= job.schedule %></p>
          </div>
          <% } %>
          <% if (job.hoursPerWeek) { %>
          <div class="job-hours-per-week">
            <h4 class="font-semibold leading-none tracking-tight">Hours per Week</h4>
            <p class="text-sm text-balance max-w-lg leading-relaxed"><%= job.hoursPerWeek %></p>
          </div>
          <% } %>
          <% if (job.equalOpportunityEmployerInfo) { %>
          <div class="job-equal-opportunity-employer-info">
            <h4 class="font-semibold leading-none tracking-tight">Equal Opportunity Employer Info</h4>
            <p class="text-sm text-balance max-w-lg leading-relaxed"><%= job.equalOpportunityEmployerInfo %></p>
          </div>
          <% } %>
          <% if (job.raw_description_no_format) { %>
          <div class="raw-description-no-format">
            <h4 class="font-semibold leading-none tracking-tight">Job Description (from the company)</h4>
            <span class="text-sm text-balance max-w-lg leading-relaxed" data-show="false">
              <%- job.raw_description_no_format %>
            </span>
          </div>
          <% } %>
          <div class="flex">
            <div class="autojob-warning px-4 py-2">
              <span class="warning-icon">⚠️</span>
              <span class="warning-text">This post is scraped from the internet and may contain errors.</span>
            </div>
          </div>
          <div class="job-recruiter-container">
            <div class="job-recruiter-info">
              <div class="recruiter-info flex flex-row gap-06">
                <a href="/user/<%= job.recruiter_username %>" class="recruiter-image">
                  <img class="thumbnail thumbnail-micro thumbnail-regular" src="<%= job.recruiter_image %>" alt="<%= job.company_name %> logo" />
                </a>
                <div class="recruiter-details flex flex-row gap-2">
                  <p class="text-sm text-balance max-w-lg leading-relaxed">
                    Posted by
                    @<a href="/user/<%= job.recruiter_username %>" class="mini-text"><%= job.recruiter_username %></a>
                  </p>
                </div>
              </div>
            </div>
          </div>
          <div class="job-links">
            <% let linkCount = 0; %>
            <% if (job.experienceLevel && linkCount < 6) { %>
            <p>
              <a href="/jobs?experienceLevel=<%= encodeURIComponent(job.experienceLevel) %>" class="font-medium underline underline-offset-4">
                View more <%= job.experienceLevel %> jobs
              </a>
            </p>
            <% linkCount++; %>
            <% } %>
            <% if (job.title && job.location && linkCount < 6) { %>
            <p>
              <a href="/jobs?titles=<%= encodeURIComponent(job.title) %>&locations=<%= encodeURIComponent(job.location) %>" class="font-medium underline underline-offset-4">
                View <%= job.title %> jobs in <%= job.location %>
              </a>
            </p>
            <% linkCount++; %>
            <% } %>
            <% if (job.skills_string && linkCount < 6) { %>
            <p>
              <% const skills = job.skills_string.split(',').map(skill => skill.trim()); %>
              <% skills.forEach(skill => { %>
              <% if (linkCount < 6) { %>
              <a href="/jobs?skill=<%= encodeURIComponent(skill) %>" class="font-medium underline underline-offset-4">
                View jobs requiring <%= skill %>
              </a><br />
              <% linkCount++; %>
              <% } %>
              <% }); %>
            </p>
            <% } %>
            <% if (job.accepted_college_majors && linkCount < 6) { %>
            <p>
              <% const majors = job.accepted_college_majors.split(',').map(major => major.trim()); %>
              <% majors.forEach(major => { %>
              <% if (linkCount < 6) { %>
              <a href="/jobs?majors=<%= encodeURIComponent(major) %>" class="font-medium underline underline-offset-4">
                View jobs for <%= major %> majors
              </a><br />
              <% linkCount++; %>
              <% } %>
              <% }); %>
            </p>
            <% } %>
            <% if (job.location && linkCount < 6) { %>
            <p>
              <a href="/jobs?locations=<%= encodeURIComponent(job.location) %>" class="font-medium underline underline-offset-4">
                View jobs in <%= job.location %>
              </a>
            </p>
            <% linkCount++; %>
            <% } %>
          </div>



        </div>
        <div class="similar-jobs company-profile-section">
          <div id="loading-indicator">
            <div class="spinner-container">
              <div class="spinner"></div>
            </div>
          </div>
        </div>
        <div class="similar-company-jobs company-profile-section">
          <div id="loading-indicator">
            <div class="spinner-container">
              <div class="spinner">
              </div>
            </div>
          </div>
        </div>
      </div>
      <%- include('partials/footer') %>
    </div>

    <%- include('partials/right-side-container', { }) %>
  </main>
  <script>
    const viewedJobs = <%- JSON.stringify(userViewedJobs || []) %>;
  </script>
  <script src="/js/jobPosting.js"></script>
  <script>
    let currentJobId = null;

    function showReportModal(type, id) {
      currentJobId = id;
      const modal = document.getElementById('reportModal');
      modal.classList.remove('hidden');
      modal.classList.add('flex');
      document.body.style.overflow = 'hidden';
    }


    function hideReportModal() {
      const modal = document.getElementById('reportModal');
      modal.classList.add('hidden');
      modal.classList.remove('flex');
      document.body.style.overflow = 'auto';
    }

    async function handleReportSubmit(event) {
      event.preventDefault();

      const form = event.target;
      const formData = new FormData(form);

      // Get all checked issues
      const checkedIssues = Array.from(form.querySelectorAll('input[name="issue"]:checked'))
        .map(checkbox => checkbox.value);

      // Get other reason if provided
      const otherReason = formData.get('other');

      try {
        const response = await fetch('/api/report', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            jobId: currentJobId,
            issues: checkedIssues,
            otherReason: otherReason
          })
        });

        if (response.ok) {
          alert('Thank you for your report. We will review it shortly.');
          hideReportModal();
          form.reset();
        } else {
          alert('There was an error submitting your report. Please try again.');
        }
      } catch (error) {
        console.error('Error submitting report:', error);
        alert('There was an error submitting your report. Please try again.');
      }
    }

    function extractJobIdFromUrl() {
      const urlParts = window.location.pathname.split("/");
      return urlParts[urlParts.length - 1];
    }

    function formatDate(dateString) {
      const date = new Date(dateString);
      const month = String(date.getMonth() + 1).padStart(2, "0");
      const day = String(date.getDate()).padStart(2, "0");
      const year = date.getFullYear();
      return `${month}/${day}/${year}`;
    }

    document.addEventListener('DOMContentLoaded', function () {

      getSimilarJobs(<%= job.id %>);
      getSimilarJobsByCompany(<%= job.id %>);
      if ('<%= user %>') {
        const userIsPremium = '<%= user ? user.isPremium : false %>';
        if (userIsPremium && !<%= job.isProcessed %>) {
          processJobPosting(<%= job.id %>);
        }
        checkFavorite(<%= job.id %>);
      }

      const companyProfileButtons = document.querySelectorAll('.company-navbar-button');
      const companyProfileSections = document.querySelectorAll('.company-profile-section');

      companyProfileButtons.forEach(button => {
        button.addEventListener('click', () => {
          const targetId = button.getAttribute('data-id');

          companyProfileSections.forEach(section => {
            if (section.className.includes(targetId)) {
              section.style.display = 'block';
            } else {
              section.style.display = 'none';
            }
          });

          // Update active button state (optional)
          companyProfileButtons.forEach(btn => {
            btn.classList.remove('active');
          });
          button.classList.add('active');
        });
      });
    });
  </script>
  <div id="reportModal" class="fixed inset-0 bg-black/80 bg-opacity-80 hidden items-center justify-center z-50">
    <div id="reportModalWindow" class="bg-background border rounded-lg p-6 max-w-md w-full mx-4">
      <div class="flex justify-between items-center mb-4">
        <h2 class="text-lg font-semibold">Report an Issue</h2>
        <button onclick="hideReportModal()" class="text-gray-500 hover:text-gray-700">
          ✕
        </button>
      </div>

      <form id="reportForm" onsubmit="handleReportSubmit(event)">
        <div class="space-y-3">
          <label class="flex items-center">
            <input type="checkbox" name="issue" value="incorrect" class="mr-2">
            Incorrect Information
          </label>
          <label class="flex items-center">
            <input type="checkbox" name="issue" value="no-longer-available" class="mr-2">
            Job No Longer Available
          </label>
          <label class="flex items-center">
            <input type="checkbox" name="issue" value="spam" class="mr-2">
            Spam or Duplicate Postings
          </label>
          <label class="flex items-center">
            <input type="checkbox" name="issue" value="scam" class="mr-2">
            Scam or Fraudulent Posting
          </label>
          <label class="flex items-center">
            <input type="checkbox" name="issue" value="offensive" class="mr-2">
            Offensive or Inappropriate Content
          </label>
          <label class="flex items-center">
            <input type="checkbox" name="issue" value="wrong-category" class="mr-2">
            Wrong Job Category/Industry
          </label>
          <label class="flex items-center">
            <input type="checkbox" name="issue" value="misleading" class="mr-2">
            Misleading or Vague Description
          </label>
          <label class="flex items-center">
            <input type="checkbox" name="issue" value="location" class="mr-2">
            Location Issues
          </label>
          <label class="flex items-center">
            <input type="checkbox" name="issue" value="outdated" class="mr-2">
            Outdated Information
          </label>
          <label class="flex items-center">
            <input type="checkbox" name="issue" value="pay" class="mr-2">
            Pay Transparency Issues
          </label>

          <div class="mt-4">
            <label class="block mb-2">Other (please specify):</label>
            <textarea name="other" class="w-full p-2 border rounded-md" placeholder="Enter your reason here..." rows="3"></textarea>
          </div>
        </div>

        <div class="mt-6 flex justify-end gap-3">
          <button type="button" onclick="hideReportModal()" class="px-4 h-8 text-foreground border rounded-md hover:bg-gray-50">
            Cancel
          </button>
          <button type="submit" class="px-4 bg-foreground h-8 text-background rounded-md hover:bg-gray-800">
            Submit
          </button>
        </div>
      </form>
    </div>
  </div>
</body>


</html>