<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover" />
  <title>CORE/</title>
  <link rel="stylesheet" href="/css/navbar.css" />
  <link rel="stylesheet" href="/css/update-post.css" />

  <link rel="shortcut icon" href="/img/core.png" />
</head>
<style>
</style>

<body>
  <%- include('partials/navbar', { pagePath: 'updates' }) %>
  <main>
    <div class="update-post">
      <div class="update-post-content">
        <h4 class="update-post-header margin-06-bottom">Loading...</h4>

        <div class="update-post-info">
          <div class="update-post-details">
            <div class="update-post-title-container">
              <h3 class="update-post-title">Loading...</h3>
            </div>
            <div>
              <p class="update-post-date sub-text secondary-text">Loading...</p>
            </div>
          </div>
        </div>
      </div>
      <div class="update-post-body">Loading...
      </div>
    </div>
    <div class="update-comments-container">
      <h4 class="update-comments-header margin-06-bottom">Comments</h4>
      <% if (user) { %>
      <form class="comment-form margin-1-bottom" action="/updates/<%= updateId %>/comment" method="POST">
        <textarea name="content" class="comment-input adaptive-input" placeholder="Add a comment..." required></textarea>
        <button type="submit" class="comment-submit submit-button-normal">Post</button>
      </form>
      <% } %>
      <div class="update-comments">
      </div>
    </div>
    <%- include('partials/footer') %>
  </main>
  <script>
    function displayPullRequestInfo(prData) {
      console.log(prData);
      let prInfoContent = `
    <div class="pr-info">
      <p><strong> ${prData.pr_title}</strong></p>
      <p class="sub-text secondary-text"><strong><span class="material-symbols-outlined">key</span></strong> ${prData.state}</p>
      <p class="sub-text secondary-text"><strong><span class="material-symbols-outlined">rate_review</span></strong> ${prData.author} <strong><span class="material-symbols-outlined">rebase_edit</span></strong> ${prData.merged_by || 'N/A'}</p>
      <p class="sub-text secondary-text"><strong><span class="material-symbols-outlined">calendar_month</span></strong> ${new Date(prData.created_at).toDateString()}<strong><span class="material-symbols-outlined">done_outline</span></strong> ${prData.merged_at ? new Date(prData.merged_at).toDateString() : 'Not merged'}</p>
      <p class="margin-06-bottom"><span class="tag green-tag">+${prData.additions}</span>  <span class="tag red-tag">-${prData.deletions}</span> in ${prData.changed_files} files <a class="tag" style="margin-left: auto;" href="${prData.pr_url}" target="_blank">View on GitHub</a></p>
      <h5 class="margin-1-bottom"><span class="material-symbols-outlined">commit</span>Commits (${prData.total_commits}):</h5>
      <ul class="commit-list">
  `;

      prData.commits.forEach(commit => {
        prInfoContent += `
      <li class="commit-item">
        <strong>${commit.sha.substring(0, 7)}</strong>: ${commit.message} 
        <br><span class="commit-details">by ${commit.author} on ${new Date(commit.date).toDateString()}</span>
      </li>
    `;
      });

      prInfoContent += `
      </ul>
    </div>
  `;

      return prInfoContent;
    }


    function fetchUpdates() {
      Promise.all([
          fetch(`/api/updates/<%= updateId%>`),
          fetch(`/api/updates/<%= updateId%>/pr-info`)
        ])
        .then(([updateResponse, prResponse]) =>
          Promise.all([updateResponse.json(), prResponse.json()])
        )
        .then(([updateData, prData]) => {
          //console.log('Received update data:', updateData);
          //console.log('Received PR data:', prData);

          const updatePostHeader = document.querySelector('.update-post-header');
          const updatePostTitle = document.querySelector('.update-post-title');
          const updatePostDate = document.querySelector('.update-post-date');
          const updatePostBody = document.querySelector('.update-post-body');
          const updateComments = document.querySelector('.update-comments');
          const updateCommentsHeader = document.querySelector('.update-comments-header');

          if (updatePostHeader && updatePostTitle && updatePostDate && updatePostBody && updateComments) {
            // Update your DOM elements here
            updatePostHeader.textContent = 'Update / ' + updateData.user_name;
            updatePostTitle.textContent = updateData.title;
            updatePostDate.textContent = new Date(updateData.post_date).toDateString();

            // Create HTML content for the update body, including PR info
            let bodyContent = '<p class="update-data">' + updateData.content + '</p>';
            if (prData && prData.pr_url) {
              bodyContent += displayPullRequestInfo(prData);
            }
            updatePostBody.innerHTML = bodyContent;

            // Render comments (assuming this part stays the same)
            updateComments.innerHTML = '';
            updateCommentsHeader.textContent = `Comments (${updateData.comments.length})`;
            updateData.comments.forEach(comment => {
              const commentElement = document.createElement('div');
              commentElement.classList.add('comment');
              commentElement.innerHTML = `
            <div class="comment-info">
              <div class="comment-icon">
                <img class="thumbnail thumbnail-tiny thumbnail-regular" src="${comment.user_avatar}" alt="User Icon">
              </div>
              <div class="comment-details">
                <div class="comment-author main-text">${comment.user_name}</div>
                <div class="comment-date sub-text secondary-text">${new Date(comment.created_at).toDateString()}</div>
              </div>
            </div>
            <div class="comment-body main-text">${comment.content}</div>
          `;
              updateComments.appendChild(commentElement);
            });
          }
        })
        .catch(error => {
          console.error('Error:', error);
        });
    }

    document.addEventListener('DOMContentLoaded', fetchUpdates);
  </script>
</body>

</html>