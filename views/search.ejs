<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover" />
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
  <link rel="stylesheet" href="/css/navbar.css" />
  <link rel="stylesheet" href="/css/search.css" />
  <link rel="stylesheet" href="/css/jobs.css" />
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

  <link rel="shortcut icon" href="/img/core.png" />
  <title>Search Results - <%= searchTerm %></title>
</head>

<body>
  <%- include('partials/navbar', { pagePath: 'search', user: user }) %>
  <div class="container">
    <div class="jobs-header">
      <h3 class="secondary-text">Search results for <span class="tag"><%= searchTerm %></span></h3>
    </div>
    <div id="loading-indicator" style="display: none;">
      <div class="spinner-container">
        <div class="spinner"></div>
      </div>
    </div>
    <div id="posts-container" class="column">
      <h3 class="users-header default-hidden secondary-text margin-06-bottom">Users</h3>
      <div id="users-results"></div>
      <h3 class="jobs-display-header default-hidden secondary-text margin-06-bottom">Jobs</h3>
      <div id="jobs-results"></div>
      <h3 class="posts-header default-hidden secondary-text margin-06-bottom">Posts</h3>
      <div id="posts-results"></div>
    </div>
  </div>
  <script>
    function createJobElement(job) {
      if (!job) {
        return null;
      }
      const jobElement = document.createElement('div');
      jobElement.classList.add('job');
      jobElement.onclick = () => (window.location.href = `/jobs/${job.id}`);

      const tagsArray = job.skills ?
        job.skills.split(',').map(skill => skill.trim()) : [];

      const displayedTags = tagsArray.slice(0, 6);

      const tagsHTML = displayedTags
        .map(
          (skill) =>
          `<span class="tag">${skill}</span>`
        )
        .join('');

      jobElement.innerHTML = `
      <div class="job-preview">
        <div class="job-info">
          <div class="company-info">
            ${
            job.company_logo
              ? `<img class="thumbnail thumbnail-regular thumbnail-tiny" style="height: 40px; width: auto;" src="${job.company_logo}" alt="" />`
              : ''
        }
          <div class="job-posting-company-info">
            <p class="company-name secondary-text">${job.company_name}</p>
            <h3 class="job-title"><a href="/jobs/${job.id}">${
        job.title
      }</a></h3>
          </div>
        </div>
        <h5 class="job-subtitle secondary-text">${job.location}</h5> 
        <div class="job-posting-information job-subtitle secondary-text">
          <span>${
  job.experienceLevel === 'Mid Level'
    ? 'L3/L4'
    : job.experienceLevel === 'Entry Level'
      ? 'L1/L2'
      : job.experienceLevel === 'Senior'
        ? 'L5/L6'
        : job.experienceLevel
}</span>

          <span class="job-salary" style="margin-left: auto;">${job.salary != 0 ? ` • USD $${job.salary.toLocaleString()}` : ''}${
  job.salary_max != 0 ? '- $' + job.salary_max.toLocaleString() : ''
}</span>
        </div>
        <div class="job-posting-flairs">${tagsHTML}</div>
      </div>
    </div>
  `;
      return jobElement;
    }

    async function fetchSearchResults() {
      const loadingIndicator = document.getElementById('loading-indicator');
      loadingIndicator.style.display = 'block';
      try {
        const response = await axios.get('/search/results', {
          params: {
            searchTerm: '<%= searchTerm %>'
          }
        });
        const {
          users,
          jobs,
          posts
        } = response.data;
        console.log('Users:', users);
        console.log('Jobs:', jobs);
        console.log('Posts:', posts);

        renderUsers(users.recordset);
        renderJobs(jobs.recordset);
        renderPosts(posts.recordset);
      } catch (error) {
        console.error('Error fetching search results:', error);
      } finally {
        loadingIndicator.style.display = 'none';
      }
    }

    function renderUsers(users) {
      const usersContainer = document.getElementById('users-results');
      const usersHeader = document.querySelector('.users-header');
      if (users.length > 0) {
        usersHeader.classList.add('show');
        usersContainer.innerHTML = `
          <div class="users">
            ${users.map(user => `
              <div class="user" onclick="window.location.href='/user/${user.username}'">
                <div class="user-image">
                  <img id="user-avatar" src="${user.avatar || '/img/default-avatar.png'}" alt="Profile Picture" style="box-shadow: 0 1px 10px ${user.profile_border_color}; border: 1px solid ${user.profile_border_color} !important;" />
                </div>
                <div class="search-user-info">
                  <p class="adaptive-text main-text">${user.firstname} ${user.lastname}</p>
                  <p class="secondary-text sub-text">@${user.username}</p>
                </div>
              </div>
              <hr>
            `).join('')}
          </div>
        `;
      } else {
        usersContainer.innerHTML = '<div>No users available</div>';
      }
    }

    function renderJobs(jobs) {
      const jobsContainer = document.getElementById('jobs-results');
      const jobsHeader = document.querySelector('.jobs-display-header');
      if (jobs.length > 0) {
        jobsHeader.classList.add('show');
        jobsContainer.innerHTML = jobs.map(job => createJobElement(job).outerHTML).join('');
      } else {
        jobsContainer.innerHTML = '<div>No jobs available</div>';
      }
    }

    function renderPosts(posts) {
      const postsContainer = document.getElementById('posts-results');
      const postHeader = document.querySelector('.posts-header');
      if (posts.length > 0) {
        postHeader.classList.add('show');
        const displayPosts = posts.length > 4 ? posts.slice(0, 4) : posts;
        postsContainer.innerHTML = `
      <div class="posts">
        ${displayPosts.map(post => `
          <div class="post" onclick="window.location.href='/posts/${post.id}'">
            <div class="post-content">
              <div class="post-header">
                <div class="post-header-username">
                  <div class="avatar">
                    <img src="${post.author_avatar}" loading="lazy" alt="Avatar">
                  </div>
                  <div class="username">
                    <a class="username-link" href="/user/${post.author_username}"><strong>${post.author_username}</strong></a>
                    <div class="post-date" id="secondary-text">
                      <span style="color:${post.community_color};">${post.community_name}</span>
                      <span> • ${new Date(post.created_at).toLocaleDateString()} • ${post.views} views</span>
                    </div>
                  </div>
                </div>
              </div>
              <div class="title">${post.title}</div>
              <div class="description">${post.content.substring(0, 150)}...</div>
            </div>
          </div>
        `).join('')}
        ${posts.length > 4 ? `
          <div class="load-more">
            <button class="load-more-btn" id="regular-button" onclick="window.location.href='/search/posts/?searchTerm=<%= searchTerm %>'">Load More Posts</button>
          </div>
        ` : ''}
      </div>
    `;
      } else {
        postsContainer.innerHTML = '<div>No posts available</div>';
      }
    }

    // Call the function to fetch and render results when the page loads
    document.addEventListener('DOMContentLoaded', fetchSearchResults);
  </script>
</body>

</html>