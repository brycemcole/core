<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover" />
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
  <link rel="stylesheet" href="/css/navbar.css" />
  <link rel="stylesheet" href="/css/favorites.css" />
  <link rel="stylesheet" href="/css/user_profile.css" />
  <link rel="shortcut icon" href="/img/core.png" />
</head>

<style>
  main {
    display: block;
  }

  .favorite:hover {
    background-color: var(--light-mode-hover-color);
    cursor: pointer;
  }

  .favorites-header {
    margin: 13px 10px;
  }

  .favorites-type-button .material-symbols-outlined {
    font-size: 1rem;
  }

  .favorites-footer {
    display: flex;
    justify-content: space-between;
    width: 100%;
    flex-direction: row;
    font-size: .825rem;
  }

  .dropdown-content {
    display: none;
  }

  .favorite-title {
    max-width: 85%;
  }

  .favorite-header {
    display: flex;
    width: 100%;
    flex-direction row;
    justify-content: space-between;
  }

  .dropbtn .material-symbols-outlined {
    font-size: 1.2rem;
  }

  .favorite {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 10px;
    background: none;
    border-bottom: 1px solid var(--border-color);
    width: 100%;
    padding: 10px 17px;
    box-sizing: border-box;
  }

  .favorites {
    /* padding: 0px 14px; */
    display: flex;
    flex-direction: column;
  }

  .favorite:hover {
    background-color: var(--light-mode-hover-color);
    cursor: pointer;
  }

  .favorites-header {
    margin: 13px 10px;
  }

  .favorites-type-button {
    cursor: pointer;
    background-color: var(--light-mode-body-color);
    border: 1px solid var(--light-mode-body-color);
    border-radius: 10px;
    padding: 8px 10px;
    text-align: left;
    font-weight: bold;
    font-size: .9em;
    color: var(--light-mode-text-color);
    display: flex;
    flex-direction: row;
    gap: 4px;
  }

  .favorites-type-button.active {
    background-color: #7199d2;
    border: 1px solid #436698;
    color: white;
  }

  .favorites-type-button .material-symbols-outlined {
    font-size: 1rem;
  }

  .favorites-footer {
    display: flex;
    justify-content: space-between;
    width: 100%;
    flex-direction: row;
  }

  .dropdown-content {
    display: none;
  }

  .favorite-title {
    max-width: 85%;
  }

  .favorite-header {
    display: flex;
    flex-direction row;
    justify-content: space-between;
  }

  main {
    height: calc(100dvh - var(--navbar-height));
    background-color: var(--light-mode-main-color);
  }

  @media screen and (max-width: 600px) {
    body {
      height: calc(100dvh - var(--mobile-navbar-height) - var(--mobile-second-navbar-height)) !important;
      overflow-y: hidden;
    }

    main {
      overflow-y: auto;

    }
  }


  button.dropbtn {
    background-color: transparent;
    border: none;
    color: var(--light-mode-secondary-text-color);
    font-size: 16px;
    cursor: pointer;
  }

  .dropdown-content.show {
    display: block;
  }

  .dropdown {
    position: relative;
    display: inline-block;
  }

  .dropdown-content a {
    color: var(--light-mode-secondary-text-color);
    padding: 12px 16px;
    text-decoration: none;
    display: block;
  }

  .dropdown-content {
    position: absolute;
    background-color: var(--light-mode-main-color);
    min-width: 160px;
  }

  #favorites-header {
    margin: 13px 13px;
  }

  .favorites-container {
    max-width: 800px;
    display: flex;
    margin-left: auto;
    margin-right: auto;
    flex-direction: column;
    align-items: center;
  }

  div.favorites-type-selector {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 11px;
    overflow-x: auto;

    -webkit-scrollbar {
      display: none;
    }

    -ms-overflow-style: none;
    scrollbar-width: none;
  }

  div.favorites-type-selector::-webkit-scrollbar {
    display: none;
  }

  @media (prefers-color-scheme: dark) {
    main {
      background-color: var(--dark-mode-body-color);
    }

    .favorite {
      background-color: var(--dark-mode-body-color);
      border-color: var(--dark-mode-border-color);
    }

    .favorites-type-button {
      background-color: var(--dark-mode-lighter-color);
      border: 1px solid var(--dark-mode-border-color);
      color: var(--dark-mode-text-color);
    }

    .favorites-type-button.active {
      background-color: var(--dark-mode-main-color);
      border: 1px solid var(--dark-mode-border-color);
      color: var(--dark-mode-text-color);
    }

    .favorite:hover {
      background-color: var(--dark-mode-hover-background-color);
    }
  }

  @media screen and (max-width: 600px) {
    .favorites-container {
      align-items: normal
    }
  }
</style>

<body>
  <%- include('partials/navbar', { pagePath: 'favorites' }) %>
  <main>
    <div class="favorites-container">
      <div class="page-header">
        <div class="header secondary-text">
          <h5>Favorites</h5>
        </div>
        <div class="favorites-type-selector">
          <button class="favorites-type-button" onclick="getFavorites('all')">
            <span class="material-symbols-outlined">
              favorite
            </span>
            <p>All</p>
          </button>
          <button class="favorites-type-button" onclick="getFavorites('posts')">
            <span class="material-symbols-outlined">
              article
            </span>
            <p>Posts</p>
          </button>
          <button class="favorites-type-button" onclick="getFavorites('jobs')">
            <span class="material-symbols-outlined">
              work
            </span>
            <p>Jobs</p>
          </button>
          <button class="favorites-type-button" onclick="getFavorites('comments')">
            <span class="material-symbols-outlined">
              comment
            </span>
            <p>Comments</p>
          </button>
        </div>
      </div>
      <div class="favorites" id="favoritesContainer">

      </div>
      <%- include('partials/footer') %>
    </div>

  </main>

  <script>
    const notificationSelectorButtons = document.querySelectorAll('.favorites-type-button');
    let activeButton = null; // Track the currently active button

    // Function to set the active button
    function setActiveButton(button) {
      if (activeButton) {
        activeButton.classList.remove('active');
      }
      button.classList.add('active');
      activeButton = button;
    }

    notificationSelectorButtons.forEach(button => {
      button.addEventListener('click', () => {
        const type = button.textContent.toLowerCase();
        setActiveButton(button);
      });
    });

    const allButton = document.querySelector('.favorites-type-button:nth-child(1)');
    setActiveButton(allButton);

    async function getFavorites(type = '') {
      try {
        const response = await fetch(`/favorites/${type}`);
        const data = await response.json();
        const favorites = data.favorites;
        renderFavorites(favorites, type);
      } catch (error) {
        console.error('Error fetching favorites:', error);
      }
    }

    function renderFavorites(favorites, type) {
      const favoritesContainer = document.getElementById('favoritesContainer');
      favoritesContainer.innerHTML = '';

      if (type === 'all') {
        renderFavoritePosts(favorites.posts);
        renderFavoriteComments(favorites.comments);
        renderFavoriteJobs(favorites.jobs);
      } else if (type === 'posts') {
        renderFavoritePosts(favorites);
      } else if (type === 'comments') {
        renderFavoriteComments(favorites);
      } else if (type === 'jobs') {
        renderFavoriteJobs(favorites);
      }
    }

    function renderFavoritePosts(posts) {
      const favoritesContainer = document.getElementById('favoritesContainer');

      const favoritesHeaderContainer = document.createElement('div');
      favoritesHeaderContainer.classList.add('page-header');
      const favoriteHeader = document.createElement('h5');
      favoriteHeader.classList.add('secondary-text');
      favoriteHeader.textContent = 'Posts';
      favoritesHeaderContainer.appendChild(favoriteHeader);
      favoritesContainer.appendChild(favoritesHeaderContainer);

      if (posts.length === 0) {
        const noFavoritesElement = document.createElement('div');
        noFavoritesElement.classList.add('favorite');
        noFavoritesElement.innerHTML = `
        <h5>No favorite posts found.</h5>
      `;
        favoritesContainer.appendChild(noFavoritesElement);
        return;
      }


      posts.forEach((post) => {
        const favoriteElement = document.createElement('div');
        favoriteElement.classList.add('favorite');
        favoriteElement.onclick = () => {
          window.location.href = `/posts/${post.post_id}`;
        };


        favoriteElement.innerHTML = `
      <div class="favorite-header">
        <div class="favorite-title">
          <h5>
          <a href="/posts/${post.post_id}">${post.title}</a>
          </h5>
        </div>
        <div class="dropdown">
          <button class="dropbtn" onclick="toggleDropdown(event)">
            <span class="material-symbols-outlined">
              more_horiz
            </span>
          </button>
          <div class="dropdown-content">
            <form action="/favorites/post/${post.post_id}?_method=DELETE" method="POST">
              <input type="hidden" name="_method" value="DELETE">
              <button type="submit">Delete</button>
            </form>
          </div>
        </div>
      </div>
      <div class="favorites-content">
        <div>
          <p class="favorites-text">${post.content
                  .replace(/(?:\r\n|\r|\n)/g, ' ')
                  .replace(/\*\*(.*?)\*\*/g, '$1')
                  .replace(/\*(.*?)\*/g, '$1')
                  .replace(/__(.*?)__/g, '$1')
                  .replace(/_(.*?)_/g, '$1')
                  .replace(/!\[.*?\]\(.*?\)/g, '')
                  .replace(/\[.*?\]\(.*?\)/g, '$1')}</p>
        </div>
          </div>
                  <div class="favorites-footer">
        <p>
          <strong style="color: ${post.profile_border_color}ff;">
           ${post.username}
          </strong> 
          in 
          <strong style="color: ${post.community_color}95;">
            /${post.community_name}
          </strong>
        </p>
        <p id="secondary-text">${formatDate(post.created_at[1])}</p>
        </div>
      `;

        favoritesContainer.appendChild(favoriteElement);
      });
    }

    function renderFavoriteComments(comments) {
      const favoritesContainer = document.getElementById('favoritesContainer');

      const favoritesHeaderContainer = document.createElement('div');
      favoritesHeaderContainer.classList.add('page-header');
      const favoriteHeader = document.createElement('h5');
      favoriteHeader.classList.add('secondary-text');
      favoriteHeader.textContent = 'Comments';
      favoritesHeaderContainer.appendChild(favoriteHeader);
      favoritesContainer.appendChild(favoritesHeaderContainer);

      if (comments.length === 0) {
        const noFavoritesElement = document.createElement('div');
        noFavoritesElement.classList.add('favorite');
        noFavoritesElement.innerHTML = `
        <h5>No favorite comments found.</h5>
      `;
        favoritesContainer.appendChild(noFavoritesElement);
        return;
      }

      comments.forEach((comment) => {
        const favoriteElement = document.createElement('div');
        favoriteElement.classList.add('favorite');
        favoriteElement.onclick = () => {
          window.location.href = `/posts/${comment.post_id[1]}#${comment.comment_id}`;
        };

        favoriteElement.innerHTML = `
      <div class="favorite-header">
        <div class="favorite-title">
        
        <h5>
        <a href="/posts/${comment.post_id[1]}#${comment.comment_id}">${comment.comment}</a></h5>
        </div>
        <div class="dropdown">
          <button class="dropbtn" onclick="toggleDropdown(event)">
            <span class="material-symbols-outlined">
              more_horiz
            </span>
          </button>
          <div class="dropdown-content">
            <form action="/favorites/comment/${comment.post_id[1]}/${comment.comment_id}?_method=DELETE" method="POST">
              <input type="hidden" name="_method" value="DELETE">
              <button type="submit">Delete</button>
            </form>
          </div>
        </div>
      </div>
      <div class="favorites-footer">
        <p>${formatDate(comment.created_at[1])}</p>
      </div>
      `;

        favoritesContainer.appendChild(favoriteElement);
      });
    }

    function renderFavoriteJobs(jobs) {
      const favoritesContainer = document.getElementById('favoritesContainer');

      const favoritesHeaderContainer = document.createElement('div');
      favoritesHeaderContainer.classList.add('page-header');
      const favoriteHeader = document.createElement('h5');
      favoriteHeader.classList.add('secondary-text');
      favoriteHeader.textContent = 'Jobs';
      favoritesHeaderContainer.appendChild(favoriteHeader);
      favoritesContainer.appendChild(favoritesHeaderContainer);

      if (jobs.length === 0) {
        const noFavoritesElement = document.createElement('div');
        noFavoritesElement.classList.add('favorite');
        noFavoritesElement.innerHTML = `
        <h5>No favorite jobs found.</h5>
      `;
        favoritesContainer.appendChild(noFavoritesElement);
        return;
      }

      jobs.forEach((job) => {
        const favoriteElement = document.createElement('div');
        favoriteElement.classList.add('favorite');
        favoriteElement.onclick = () => {
          window.location.href = `/jobs/${job.job_id}`;
        };

        favoriteElement.innerHTML = `
      <div class="favorite-header">
        <div class="favorite-title">

          <img src="${job.company_logo}" alt="${job.company_name}" style="width: 30px; height: 30px; border-radius: 50%;">
          <div>
          <h5>
          <a class="secondary-text" href="/jobs/company/${encodeURIComponent(job.company_name)}">${job.company_name}</a></h5>
          <h5>
          <a href="/jobs/${job.job_id}">${job.title}</a></h5></h5>
          </div>
        </div>
        <div class="dropdown">
          <button class="dropbtn" onclick="toggleDropdown(event)">
            <span class="material-symbols-outlined">
              more_horiz
            </span>
          </button>
          <div class="dropdown-content">
            <form action="/favorites/jobs/${job.job_id}?_method=DELETE" method="POST">
              <input type="hidden" name="_method" value="DELETE">
              <button type="submit">Delete</button>
            </form>
          </div>
        </div>
      </div>
      <div class="favorites-footer">
        <p><strong style="color:#26704a;">$${job.salary} ${job.salary_max ? `- $${job.salary_max}` : ''}</strong></p>
                <p>${formatDate(job.created_at)}</p>
      </div>
    `;

        favoritesContainer.appendChild(favoriteElement);
      });
    }

    function toggleDropdown(event) {
      event.stopPropagation();
      const dropdownContent = event.target.closest('.dropdown').querySelector('.dropdown-content');
      dropdownContent.classList.toggle('show');
    }

    function formatDate(dateString) {
      const date = new Date(dateString);
      const month = String(date.getMonth() + 1).padStart(2, '0');
      const day = String(date.getDate()).padStart(2, '0');
      const year = date.getFullYear();
      return `${month}/${day}/${year}`;
    }

    document.addEventListener('click', function (event) {
      const dropdowns = document.querySelectorAll('.dropdown-content');
      dropdowns.forEach(function (dropdown) {
        if (!dropdown.contains(event.target)) {
          dropdown.classList.remove('show');
        }
      });
    });

    getFavorites('all');
  </script>
</body>

</html>