       <link rel="stylesheet" href="/css/right-side-container.css" />


       <div class="right-side-container">
         <div class="job-header">
           <h5>Openings</h5>
         </div>
         <div class="jobslist flex-col gap-1">

         </div>
       </div>
       <script>
         function fetchJobPreviews() {
           fetch(`/api/randomJobs`)
             .then(response => response.json())
             .then(data => {
               const jobs = data.jobPostings;
               const isMobile = window.matchMedia('(max-width: 768px)').matches;
               let jobslistContainer;
               if (isMobile) {
                 jobslistContainer = document.querySelector('div.mobile-jobs-container > div.jobslist');
               } else {
                 jobslistContainer = document.querySelector('.right-side-container > div.jobslist');
               }
               jobslistContainer.innerHTML = jobs.map(job => `
              <div class="job" onclick="window.location.href='/jobs/${job.id}'">
                <div class="job-content">
                  <div class="job-content-header">
                    <div class="company-logo-container">
                    ${job.company_logo ? `
                      <img loading="lazy" src="${job.company_logo}" alt="" class="thumbnail ${isMobile ? `thumbnail-tiny` : `thumbnail-tiny`} thumbnail-regular" />
                      ` : ``}
                    </div>
                    <div class="job-title-location">
                      <div class="job-posting-header">
                        <div class="job-company-name secondary-text">
                        <a class="secondary-text" href="/jobs/company/${job.company_name}">${job.company_name}</a></div>
                                          <div class="job-title"><a href="/jobs/${job.id}">${job.title.slice(0, 40)}</a></div>
                                                    
                    ${job.salary ? `
                  <span class="job-salary" style="margin-left: auto;">USD $${
                  job.salary ? job.salary.toLocaleString() : ""
                } ${
                job.salary_max ? "- $" + job.salary_max.toLocaleString() : ""
              }</span>
              ` : ``}
                      </div>
                    </div>
                  </div>


                  ${!isMobile ? `
                    <div class="job-description">
                      <p>${job.description}</p>
                    </div>
              <div class="desktop-job-flairs">
                  ${job.tags
                      .filter(tag => tag)
                      .flatMap(tag => tag.split(','))
                      .slice(0, 3)
                      .map(tag => `<span class="job-flair">${tag.trim()}</span>`)
                      .join('')}
              </div>
                  ` : `
                  `}
                </div>
              </div>
            `).join('');
               jobslistContainer.innerHTML += '<div class="see-more"><a href="/jobs">See More</a></div>';


               const jobElements = jobslistContainer.querySelectorAll('.job');
             })
             .catch(error => {
               console.error('Error fetching job previews:', error);
             });
         }


         function fetchCommunityJobPreviews(communityId) {
           let currentPage = 1;
           const itemsPerPage = 10;
           fetch(`/api/community/${communityId}/jobs?page=${currentPage}&limit=${itemsPerPage}`)
             .then(response => response.json())
             .then(data => {
               const jobs = data.jobPostings;
               const isMobile = window.matchMedia('(max-width: 768px)').matches;
               let jobslistContainer;
               if (isMobile) {
                 jobslistContainer = document.querySelector('div.mobile-jobs-container > div.jobslist');
               } else {
                 jobslistContainer = document.querySelector('.right-side-container > div.jobslist');
               }

               if (jobslistContainer) {
                 jobslistContainer.innerHTML = jobs.map(job => `
              <div class="job" onclick="window.location.href='/jobs/${job.id}'">
                <div class="job-content">
                  <div class="job-content-header">
                    <div class="company-logo-container">
                      ${job.company_logo ? `
                      <img loading="lazy" src="${job.company_logo}" alt="" class="job-company-logo" />
                      ` : ``}
                    </div>
                    <div class="job-title-location">
                      <div class="job-posting-header">
                        <div class="job-company-name">${job.company_name}</div>
                      </div>
                    </div>
                    <div class="job-flairs">
                      <span class="job-flair" id="pay-flair">$${Math.floor((job.salary) /  1000)}k+</span>
                  </div>
                  </div>
                  <div class="job-title"><a>${job.title.slice(0, 40)}</a></div>

                  ${!isMobile ? `
                    <div class="job-description">
                      <p>${job.description}</p>
                    </div>
              <div class="desktop-job-flairs">
                  ${job.tags
                      .filter(tag => tag)
                      .flatMap(tag => tag.split(','))
                      .slice(0, 3)
                      .map(tag => `<span class="job-flair">${tag.trim()}</span>`)
                      .join('')}
              </div>
                  ` : `
                  `}
                </div>
              </div>
            `).join('');
                 jobslistContainer.innerHTML += '<div class="see-more"><a href="/jobs">See More</a></div>';


                 const jobElements = jobslistContainer.querySelectorAll('.job');
                 jobElements.forEach(jobElement => {
                   const locationFlair = jobElement.querySelector('#location-flair');
                   const location = locationFlair.dataset.location;
                 });
               }

             })
             .catch(error => {
               console.error('Error fetching job previews:', error);
             });
         }

         document.addEventListener("DOMContentLoaded", () => {
           const isMobile = window.matchMedia('(max-width: 768px)').matches;
           let jobslistContainer;
           if (isMobile) {
             jobslistContainer = document.querySelector('div.mobile-jobs-container > div.jobslist');
           } else {
             jobslistContainer = document.querySelector('.right-side-container > div.jobslist');
           }
           const postsContainer = document.getElementById('posts-container');
           if (!postsContainer) {
             if (jobslistContainer)
               try {
                 fetchJobPreviews();
               } catch (error) {
                 console.error('Error fetching job previews:', error);
               }
             return;
           }
           const communityId = postsContainer.dataset.communityId || null;

           if (communityId) {
             if (jobslistContainer) {
               fetchCommunityJobPreviews(communityId);
             }
           } else {
             if (jobslistContainer) {
               try {
                 fetchJobPreviews();
               } catch (error) {
                 console.error('Error fetching job previews:', error);
               }
             }
           }
         });
       </script>