<!DOCTYPE html>
<html>

<head>
  <title>CORE - Login</title>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover" />
  <link rel="stylesheet" href="css/navbar.css" />
  <link rel="stylesheet" href="css/login.css" />
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
</head>

<body>
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
  <%- include('partials/navbar', { pagePath: 'home' }) %>

  <main>
    <img src="/img/core.png" onclick="window.location.href = '/'" alt="CORE Logo" class="core-logo" />
    <div class="account-stuff">
      <div id="register">
        <div class="current-user-container">
          <div class="radar-pulse">
            <div class="circle"></div>
            <div class="pulse"></div>
            <div class="pulse"></div>
          </div>
          <span class="current-user-count text-sm text-muted-foreground">0</span>
        </div>

        <div class="user-res main-text">
          <h3 class="font-semibold tracking-tight text-2xl">Login</h3>

          <p class="text-sm text-muted-foreground">
            Not a member? <a href="/register">Register here</a>
          </p>
        </div>
      </div>

      <div id="login" class="mb-4">

        <% if (successMessages && successMessages.length > 0) { %>
        <div class="success-messages">
          <% successMessages.forEach(function(msg) { %>
          <p class="success-message"><%= msg %></p>
          <% }); %>
        </div>
        <% } %>
        <% if (errorMessages && errorMessages.length > 0) { %>
        <div class="error-messages">
          <% errorMessages.forEach(function(msg) { %>
          <p class="error-message"><%= msg %></p>
          <% }); %>
        </div>
        <% } %>
        <div class="login-buttons">
          <a href="https://github.com/login/oauth/authorize?client_id=b37718dbac10df16ec0c&redirect_uri=https%3A%2F%2Fgetcore.dev%2Fauth%2Fgithub%2Fcallback" class="inline-flex gap-2 items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-9 px-4 py-2">
            <img src="/src/github.png" alt="GitHub Logo" style="height:16px;width:16px;background: white; border-radius: 100%;">
            <p class="sub-text">
              GitHub Login
            </p>
          </a>
        </div>
        <div class="relative flex justify-center text-xs uppercase"><span class="bg-card px-2 text-muted-foreground">Or continue with</span></div>
        <form action="/login" method="POST">
          <div class="input-container mb-4 relative">
            <label class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70" for="username">Username</label>
            <input class="flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 flex-1" type="text" name="username" id="username" placeholder="Username" required>
          </div>

          <div class="input-container mb-4 relative">
            <label class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70" for="password">Password</label>
            <button type="button" class="toggle-password link flex flex-row gap-03 sub-text" onclick="togglePasswordVisibility()">
              <span class="material-symbols-outlined link">visibility</span> Show
            </button>
            <input type="password" class="flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 flex-1" name="password" id="password" placeholder="Password" required>

          </div>

          <button type="submit" class="inline-flex mb-4 items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground shadow hover:bg-primary/90 h-9 px-4 py-2 w-full">
            Login
          </button>
          <p class="flex-1 text-sm text-muted-foreground">Forgot your password? Reset it <a class="link" href="/forgot-password"> here</a></p>

        </form>
      </div>
    </div>
    <%- include('partials/footer') %>

  </main>
</body>
<script src="https://challenges.cloudflare.com/turnstile/v0/api.js?onload=onloadTurnstileCallback" async defer></script>

<script>
  async function updateUserCount() {
    try {
      const response = await fetch('/api/get-current-user-count');
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      const userCount = await response.json();
      document.querySelector('.current-user-count').textContent = userCount + ' active users';
    } catch (error) {
      console.error('Error fetching user count:', error);
    }
  }

  function togglePasswordVisibility() {
    const passwordInput = document.getElementById('password');
    const toggleButton = document.querySelector('.toggle-password');
    const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
    passwordInput.setAttribute('type', type);
    toggleButton.innerHTML = type === 'password' ? '<span class="material-symbols-outlined">visibility</span> Show' : '<span class="material-symbols-outlined">visibility_off</span> Hide';
  }
  document.addEventListener("DOMContentLoaded", function () {
    updateUserCount();
    const inputs = document.querySelectorAll('.input-container input');
    const labels = document.querySelectorAll('.input-container label');

    inputs.forEach((input, index) => {
      input.addEventListener('focus', () => {
        labels[index].classList.add('active');
        inputs[index].placeholder = '';
        inputs[index].classList.add('active');
      });

      input.addEventListener('blur', () => {
        if (input.value === '') {
          labels[index].classList.remove('active');
          inputs[index].placeholder = labels[index].textContent;
          inputs[index].classList.remove('active');
        }
      });
    });
  });

  function onTurnstileSuccess(token) {
    // Enable the login buttons
    document.getElementById('submit-button').disabled = false;
    document.getElementById('github-login-btn').removeAttribute('disabled');

    // You may want to store the token to send it with your form submission
    document.getElementById('turnstile-token').value = token;
  }


  function onSignIn(googleUser) {
    // Useful data for your client-side scripts:
    var profile = googleUser.getBasicProfile();
    console.log("ID: " + profile.getId()); // Do not send to your backend! Use an ID token instead.
    console.log('Name: ' + profile.getName());
    console.log('Image URL: ' + profile.getImageUrl());
    console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.

    // The ID token you need to pass to your backend:
    var id_token = googleUser.getAuthResponse().id_token;
    console.log("ID Token: " + id_token);

    // Send the ID token to your backend via an HTTPS POST request
    var xhr = new XMLHttpRequest();
    xhr.open('POST', 'YOUR_BACKEND_URL_HERE');
    xhr.setRequestHeader('Content-Type', 'application/json');
    xhr.onload = function () {
      console.log('Signed in as: ' + xhr.responseText);
    };
    xhr.send(JSON.stringify({
      token: id_token
    }));
  }

  // Sign out function (if you want to provide a sign-out button)
  function signOut() {
    var auth2 = gapi.auth2.getAuthInstance();
    auth2.signOut().then(function () {
      console.log('User signed out.');
    });
  }
</script>
<script src="https://apis.google.com/js/platform.js" async defer></script>

</html>